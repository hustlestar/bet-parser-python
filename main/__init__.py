# # encoding=cp1251
# import lxml.html as LH
# import requests
# import codecs
#
# from main.Bet import Bet
#
# user_id = 12345
# url = "https://www.parimatch.ru/bet.html?hdhdhdhdhdhd=7669372%2C7669358%2C7670317%2C7670355%2C7668802%2C7669787"
#
# headers = {
#     'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:45.0) Gecko/20100101 Firefox/45.0'
# }
#
# r = requests.get(url, headers)
#
# with codecs.open('test.html', 'w', encoding='utf-8') as output_file:
#     output_file.write(r.text)
#
# with codecs.open('test.html', 'r', encoding='utf-8') as myfile:
#     data = myfile.read().replace('<br>', ' ')
#
# tree = LH.fromstring(data)
# tableBets = tree.xpath('//table[@class="dt twp"]')[0]  # table теги с атрибутом class равным "dt twp"
#
# # betRows = tableBets.xpath('.//tr[@class="bk"]')
# betRows = tableBets.xpath('.//tr')  # [@class="bk"]
# headerRow = tableBets.xpath('.//th')
#
# validBets = []
#
#
# def getName(row):
#     val = row.xpath('.//a[@class="om"]')
#     if len(val) > 0:
#         return val[0].text
#     else:
#         return None
#
#
# def getAdditionalBets(row):
#     dict = {}
#     val = row.xpath('.//table')
#     last = ""
#     if len(val) > 0:
#         if len(val[0].xpath('.//tr/th')) > 0:
#             if val[0].xpath('.//tr/th')[0].text == u'Дополнительные форы:' and len(
#                     val[0].xpath('.//tr/td/table/tr')) > 1:
#                 for v in val[0].xpath('.//tr/td/table/tr/td'):
#                     g = v.text_content().replace(";", "").split(':')
#                     if len(g) == 1:
#                         m = g[0].split(' ')
#                         for c in xrange(0, len(m) - 1, 2):
#                             dict[last + " " + m[c]] = m[c + 1]
#                     else:
#                         last = g[0]
#     return dict
#
#
# def getBets(row):
#     dict = {}
#     vals = row.xpath('.//td')
#     dict[headerRow[3].text + " " + vals[3].xpath('.//b')[0].text] = vals[4].xpath('.//a')[0].text
#     dict[headerRow[3].text + " " + vals[3].xpath('.//b')[1].text] = vals[4].xpath('.//a')[1].text
#     return dict
#
#
# for record in betRows:
#     if getName(record):
#         newBet = Bet()
#         newBet.title = getName(record)
#         newBet.mapOfAllBets = getBets(record)
#         validBets.append(newBet)
#     elif len(validBets) > 0:
#         validBets[-1].mapOfAllBets.update(getAdditionalBets(record))
#         continue
#
#
# def foraMinusOneLowCaf(bets):
#     for b in bets:
#         for key, val in b.mapOfAllBets.items():
#             if u"–1.0" in key:
#                 if float(val) < 1.4:
#                     print b.title + " " + key + " " + val
#
#
# foraMinusOneLowCaf(validBets)
#
# with codecs.open('result.csv', 'w', 'utf-8') as output:
#     for x in validBets:
#         output.write((x.__str__() + u"\n"))
# output.close()
